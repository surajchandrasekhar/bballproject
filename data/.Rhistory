#challenge
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
```
user = "fabpot"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
token.url <- "https://api.github.com/?access_token=0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
#full url to check API
git.url <- paste0(base.url, "/users/" , user)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = user.info$repos_url
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
```
# `r user`
![image of `r user`](`r user.info$avatar_url`)
**`r user`** is one of the most popular users on GitHub based on contributions. He himself has created **`r num_repos`.** His most popular
repository he has created himself is *`r most_popular`*.
```{r echo=FALSE}
repos.flatten <- mutate(repos.flatten, date_created = format(repos.flatten$created_at, format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
```
##table.data
```{r echo=FALSE}
table.data
```
##Summary
```{r echo=FALSE}
summary
```
#Challenge
```{r echo=FALSE}
#challenge
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
```
install.packages("knitr")
install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "fabpot"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
token.url <- "https://api.github.com/?access_token=0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
#full url to check API
git.url <- paste0(base.url, "/users/" , user)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = user.info$repos_url
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(repos.flatten$created_at, format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
kable(summary)
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
?format
as.Date(repos.flatten$created_at)
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
#install.packages("ggplot2")
#install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "fabpot"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
token.url <- "https://api.github.com/?access_token=0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
#full url to check API
git.url <- paste0(base.url, "/users/" , user)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = user.info$repos_url
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
as.Date(repos.flatten$created_at)
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
kable(summary)
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
?fromJSON
repos.info <- fromJSON(user.repos.url, per_page = 100)
#install.packages("ggplot2")
#install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "fabpot"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?",token)
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url, per_page = 100)
repos.info <- fromJSON(user.repos.url, per_page = 100)
repos.info <- fromJSON(user.repos.url)
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
View(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
as.Date(repos.flatten$created_at)
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
kable(summary)
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?page=100?access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
user.repos.url
user.repos.url = paste0(user.info$repos_url,"?per_page=100?access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
user.repos.url = paste0(user.info$repos_url,"?page=100?access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
user = "mbostock"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?page=100?access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- mos
user.repos.url = paste0(user.info$repos_url,"?page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.info <- fromJSON(user.repos.url)
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?page=100&access_token=",token)
user.repos.url
user.repos.url = paste0(user.info$repos_url,"?per_page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
kable(table.data)
kable(summary)
qplot(repos.flatten$watchers_count, repos.flatten$forks, xlab = "Watchers", ylab="Forks", main="Watchers vs Forks")
View(repos.flatten)
tall.packages("ggplot2")
#install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?per_page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <-
- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
#summary table
summary <- group
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
#summary table
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
#install.packages("ggplot2")
#install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "fabpot"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?per_page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
#summary table
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
#install.packages("ggplot2")
#install.packages("knitr")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(knitr)
#Querying Data
user = "mkfreeman"
token = "0cbc4a3d955c2ba750cc0c75160df3faa1b6313e"
base.url <- "https://api.github.com"
#full url to check API
git.url <- paste0(base.url, "/users/" , user,"?access_token=",token)
user.info <- fromJSON(git.url)
#getting user info
user.repos.url = paste0(user.info$repos_url,"?per_page=100&access_token=",token)
avatar = user.info$avatar_url
repos.info <- fromJSON(user.repos.url)
repos.flatten <- flatten(repos.info)
repos.flatten <- arrange(repos.flatten, desc(created_at))
#number of repositories
num_repos <- nrow(repos.info)
#most popular repositories
most_popular <- filter(repos.flatten, forks_count==max(forks_count))
most_popular <- most_popular$name
repos.flatten <- mutate(repos.flatten, date_created = format(as.Date(repos.flatten$created_at), format="%B %d %Y"))
table.data <- select(repos.flatten, id, name, language, forks, date_created)
#summary table
summary <- group_by(table.data, language) %>% summarise(total_rep = n(), avg_fork = mean(forks))
setwd("~/Documents/INFO/INFO 201/data")
player.data <- read.csv("2016playerpergame.csv")
View(player.data)
player.data <- read.csv("2016playerpergame.csv")
View(player.data)
player.data$Player <- substr(plyaer.data$Player, 0, "/")
player.data$Player <- substr(player.data$Player, 0, "/")
library(stringr)
player.data$Player <- substr(player.data$Player, 0, str_locate("/"))
player.data$Player <- substr(player.data$Player, 0, str_locate(player.data$Player, "/"))
View(player.data)
slashes <- str_locate(player.data$player,"/")
View(slashes)
player.data <- read.csv("2016playerpergame.csv")
slashes <- str_locate(player.data$player,"/")
View(slashes)
View(player.data)
slashes <- str_locate(player.data$player,"\")
View(slashes)
View(slashes)
slashes <- str_locate_all(player.data$player,"\")
slashes2 <- str_locate_all(player.data$player,"\")
slashes2 <- str_locate(player.data$Player,"\")
slashes2 <- str_locate(player.data$Player,"\\")
slashes2 <- str_locate(player.data$Player,"\\")
player.data <- read.csv("2016playerpergame.csv")
View(player.data)
player.data$useless <- NULL
View(player.data)
player.data[player.data=="N/A"] <- 0.0
View(player.data)
player.data[player.data=="NA"] <- 0.0
View(player.data)
player.data <- str_replace("NA", 0.0)
player.data <- str_replace("NA", "0.000")
player.data <- str_replace(player.data, "NA", "0.000")
player.data <- read.csv("2016playerpergame.csv")
player.data$useless <- NULL
write.csv("2016playerpergame.csv")
write.csv(player.data, "2016playerpergame.csv")
player.data <- read.csv("2015playerpergame.csv")
player.data$useless <- NULL
write.csv(player.data, "2015playerpergame.csv")
View(player.data)
library(dplyr)
View(player.data)
library(dplyr)
player.data <- read.csv("2015-16playerpergame.csv")
player.data$useless <- NULL
View(player.data)
player.data$X <- NULL
player.data <- filter(player.data,tm=="TOT")
player.data <- filter(player.data,Tm=="TOT")
player.data <- read.csv("2015-16playerpergame.csv")
player.data$X <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2015-16playerpergame.csv")
player.data <- read.csv("2014-15playerpergame.csv")
player.data$X <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2014-15playerpergame.csv")
player.data <- read.csv("2014-15playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2014-15playerpergame.csv")
player.data <- read.csv("2014-15playerpergame.csv")
player.data$X <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2014-15playerpergame.csv")
library(dplyr)
player.data <- read.csv("2013-14playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2013-14playerpergame.csv")
library(dplyr)
player.data <- read.csv("2012-13playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2012-13playerpergame.csv")
library(dplyr)
player.data <- read.csv("2011-12playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2011-12playerpergame.csv")
library(dplyr)
player.data <- read.csv("2010-11playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2010-11playerpergame.csv")
library(dplyr)
player.data <- read.csv("2009-10playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2009-10playerpergame.csv")
library(dplyr)
player.data <- read.csv("2008-09playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2008-09playerpergame.csv")
library(dplyr)
player.data <- read.csv("2007-08playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2007-08playerpergame.csv")
library(dplyr)
player.data <- read.csv("2006-07playerpergame.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2006-07playerpergame.csv")
library(dplyr)
player.data <- read.csv("2006-07advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2006-07advanced.csv")
library(dplyr)
player.data <- read.csv("2007-08advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2007-08advanced.csv")
library(dplyr)
player.data <- read.csv("2008-09advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2008-09advanced.csv")
library(dplyr)
player.data <- read.csv("2009-10advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2009-10advanced.csv")
library(dplyr)
player.data <- read.csv("2010-11advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2010-11advanced.csv")
library(dplyr)
player.data <- read.csv("2011-12advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2011-12advanced.csv")
library(dplyr)
player.data <- read.csv("2012-13advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2012-13advanced.csv")
library(dplyr)
player.data <- read.csv("2013-14advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2013-14advanced.csv")
library(dplyr)
player.data <- read.csv("2014-15advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2014-15advanced.csv")
library(dplyr)
player.data <- read.csv("2015-16advanced.csv")
player.data$useless <- NULL
player.data <- filter(player.data,!(Tm=="TOT"))
write.csv(player.data, "2015-16advanced.csv")
