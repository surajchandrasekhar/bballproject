column(width = 12,
plotOutput("plot1", height = 350,hover = hoverOpts(id ="plot_hover"))
)
),
fluidRow(
column(width = 5,
verbatimTextOutput("hover_info")
)
)
)
server <- function(input, output) {
output$plot1 <- renderPlot({
ggplot(mtcars, aes(x=mpg,y=disp,color=factor(cyl))) + geom_point()
})
output$hover_info <- renderPrint({
if(!is.null(input$plot_hover)){
hover=input$plot_hover
dist=sqrt((hover$x-mtcars$mpg)^2+(hover$y-mtcars$disp)^2)
cat("Weight (lb/1000)\n")
if(min(dist) < 3)
mtcars$wt[which.min(dist)]
}
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(plotly)
ui <- fluidPage(
plotlyOutput("distPlot")
)
server <- function(input, output) {
output$distPlot <- renderPlotly({
ggplot(iris, aes(Sepal.Width, Petal.Width)) +
geom_line() +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
tags$head(tags$style('
#my_tooltip {
position: absolute;
width: 300px;
z-index: 100;
padding: 0;
}
')),
tags$script('
$(document).ready(function(){
// id of the plot
$("#distPlot").mousemove(function(e){
// ID of uiOutput
$("#my_tooltip").show();
$("#my_tooltip").css({
top: (e.pageY + 5) + "px",
left: (e.pageX + 5) + "px"
});
});
});
'),
selectInput("var_y", "Y-Axis", choices = names(iris)),
plotOutput("distPlot", hover = "plot_hover", hoverDelay = 0),
uiOutput("my_tooltip")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
req(input$var_y)
ggplot(iris, aes_string("Sepal.Width", input$var_y)) +
geom_point()
})
output$my_tooltip <- renderUI({
hover <- input$plot_hover
y <- nearPoints(iris, input$plot_hover)[input$var_y]
req(nrow(y) != 0)
verbatimTextOutput("vals")
})
output$vals <- renderPrint({
hover <- input$plot_hover
y <- nearPoints(iris, input$plot_hover)[input$var_y]
req(nrow(y) != 0)
y
})
}
shinyApp(ui = ui, server = server)
pergame <- paste0("./data/","2006-07","playerpergame.csv")
advanced <- paste0("./data/","2006-07","advanced.csv")
team <- paste0("./data/","2006-07","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
a
a
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
setwd("~/Documents/INFO/INFO 201/bballproject copy")
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2006-07","playerpergame.csv")
advanced <- paste0("./data/","2006-07","advanced.csv")
team <- paste0("./data/","2006-07","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
runApp()
runApp()
runApp('~/Documents/INFO/INFO 201/bballpractice')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2006-07","playerpergame.csv")
advanced <- paste0("./data/","2006-07","advanced.csv")
team <- paste0("./data/","2006-07","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
paste0("PTS: ", input$plot_hover$x, "\nFG%: ",input$plot_hover$y)
})
output$scatter2 <- renderPlotly({
#team.stats <- read.csv(paste0("./data/2015-16team.csv"))
return(BuildGraph2(input$year2, input$search))
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballpractice')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2006-07","playerpergame.csv")
advanced <- paste0("./data/","2006-07","advanced.csv")
team <- paste0("./data/","2006-07","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
paste0("PTS: ", input$plot_click$x, "\nFG%: ",input$plot_click$y)
})
output$scatter2 <- renderPlotly({
#team.stats <- read.csv(paste0("./data/2015-16team.csv"))
return(BuildGraph2(input$year2, input$search))
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2006-07","playerpergame.csv")
advanced <- paste0("./data/","2006-07","advanced.csv")
team <- paste0("./data/","2006-07","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlotly({
#team.stats <- read.csv(paste0("./data/2015-16team.csv"))
return(BuildGraph2(input$year2, input$search))
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2015-16","playerpergame.csv")
advanced <- paste0("./data/","2015-16","advanced.csv")
team <- paste0("./data/","2015-16","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlot({
ggplot(newdata,aes(x=ORtg, y=DRtg + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(ORtg)), color="black") + geom_hline(aes(yintercept=mean(DRtg)), color="blue")
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2015-16","playerpergame.csv")
advanced <- paste0("./data/","2015-16","advanced.csv")
team <- paste0("./data/","2015-16","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlot({
ggplot(newdata,aes(x=ORtg, y=DRtg) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(ORtg)), color="black") + geom_hline(aes(yintercept=mean(DRtg)), color="blue")
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2015-16","playerpergame.csv")
advanced <- paste0("./data/","2015-16","advanced.csv")
team <- paste0("./data/","2015-16","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlot({
ggplot(newdata,aes(x=ORtg, y=DRtg)) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(ORtg)), color="black") + geom_hline(aes(yintercept=mean(DRtg)), color="blue")
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/2015-16playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/2015-16advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballpractice')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2015-16","playerpergame.csv")
advanced <- paste0("./data/","2015-16","advanced.csv")
team <- paste0("./data/","2015-16","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlot({
ggplot(team.stats, aes(x=ORtg, y=DRtg)) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(ORtg)), color="black") + geom_hline(aes(yintercept=mean(DRtg)), color="blue")
})
output$scatter3 <- renderPlotly({
filtered
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
View(player.joined)
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
pergame <- paste0("./data/","2015-16","playerpergame.csv")
advanced <- paste0("./data/","2015-16","advanced.csv")
team <- paste0("./data/","2015-16","team.csv")
player.stats <- read.csv(pergame)
advanced.stats <- read.csv(advanced)
team.stats <- read.csv(team)
player.joined <- left_join(player.stats,advanced.stats, by=c("Player","Tm"))
dataset <- left_join(player.joined,team.stats, by="Tm")
newdata <- filter(dataset, G.x > 41) %>%
group_by(Tm) %>%
filter(PS.G == max(PS.G))
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlot({
ggplot(newdata,aes(x=PS.G, y=eval(parse(text = input$statvar)))) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(PS.G)), color="black") + geom_hline(aes(yintercept=mean(FG.), color="blue"))
})
output$text1 <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("Points Per Game=", round(e$x, 1), "\nField Goal %", round(e$y, 1))
}
xy_str(input$plot_hover)
})
output$scatter2 <- renderPlot({
ggplot(team.stats, aes(x=ORtg, y=DRtg)) + geom_point(aes(color=Team, size=W)) + geom_vline(aes(xintercept=mean(ORtg)), color="black") + geom_hline(aes(yintercept=mean(DRtg)), color="blue")
})
output$scatter3 <- renderPlotly({
filtered <- filter(player.joined, input$dstat >= input$qty)
ggplot(filtered, aes(x=eval(parse(text=input$dstat)),y=DBPM)) + geom_point(aes(color=Team, size=DWS)) + geom_vline(aes(xintercept=mean(STL)), color="black") + geom_hline(aes(yintercept=mean(DBPM)), color="blue")
})
})
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballpractice')
runApp('~/Documents/INFO/INFO 201/bballproject')
runApp('~/Documents/INFO/INFO 201/bballproject')
runApp('~/Documents/INFO/INFO 201/bballproject')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
player <- read.csv('./data/2014-15playerpergame.csv', stringsAsFactors = FALSE)
advanced <- read.csv('./data/2014-15advanced.csv', stringsAsFactors = FALSE)
# team <- read.csv('./data/2014-15team.csv', stringsAsFactors = FALSE)
# player.joined <- left_join(player,advanced, by=c("Player", "Tm"))
# full.joined <- left_join(player.joined,team, by="Tm")
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlotly({
player.stats <- read.csv(paste0("./data/","2015-16","playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/","2015-16","advanced.csv"))
team.stats <- read.csv(paste0("./data/","2015-16","team.csv"))
player.joined <- left_join(player.stats,advanced.stats, by="Player")
full.joined <- left_join(player.joined,team.stats, by="Tm")
return(BuildGraph1(full.joined, input$statvar))
})
output$scatter2 <- renderPlotly({
team.stats <- read.csv(paste0("./data/",input$year2,"team.csv"))
return(BuildGraph2(team.stats, input$search))
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/",input$year3,"playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/",input$year3,"advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by="Player")
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballproject')
runApp('~/Documents/INFO/INFO 201/bballproject')
library(shiny)
library(plotly)
library(dplyr)
source('./scripts/graph1.R')
source('./scripts/graph2.R')
source('./scripts/graph3.R')
player <- read.csv('./data/2015-16playerpergame.csv', stringsAsFactors = FALSE)
advanced <- read.csv('./data/2015-16advanced.csv', stringsAsFactors = FALSE)
team <- read.csv('./data/2015-16team.csv', stringsAsFactors = FALSE)
player.joined <- left_join(player,advanced, by=c("Player", "Tm"))
full.joined <- left_join(player.joined,team, by="Tm")
# Start shinyServer
shinyServer(function(input, output) {
# Render a plotly object that returns your map
output$scatter1 <- renderPlotly({
return(BuildGraph1(full.joined, input$statvar))
})
output$scatter2 <- renderPlotly({
team.stats <- read.csv(paste0("./data/",input$year2,"team.csv"))
return(BuildGraph2(team.stats, input$search))
})
output$scatter3 <- renderPlotly({
player.stats <- read.csv(paste0("./data/",input$year3,"playerpergame.csv"))
advanced.stats <- read.csv(paste0("./data/",input$year3,"advanced.csv"))
player.joined <- left_join(player.stats,advanced.stats, by="Player")
return(BuildGraph3(player.joined, input$dstat,input$qty))
})
})
runApp('~/Documents/INFO/INFO 201/bballproject')
